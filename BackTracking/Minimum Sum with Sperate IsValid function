#include<iostream>
#include<bits/stdc++.h>
using namespace std;

bool isValid(int i, int j, int m, int n){
    if(i >= m || i < 0 || j < 0 || j >=n){
        return 0;
    }
    return 1;
}

int backtrack(int i, int j, int m, int n, vector<vector<int>> &arr){

    if(i == m-1 && j == n-1){
        return arr[i][j];
    }

    bool choice1_Valid = isValid(i+1, j , m , n);
    bool choice2_Valid = isValid(i, j+1 , m , n);
    
    if(choice1_Valid && choice2_Valid){
        int choice1 = backtrack(i+1, j, m, n, arr);
        int choice2 = backtrack(i, j+1, m, n, arr);
        return arr[i][j] + min(choice1,choice2);
    }

    if(choice1_Valid){
        int choice1 = backtrack(i+1, j, m, n, arr);
        return arr[i][j] + choice1;
    }
    int choice2 = backtrack(i, j+1, m, n, arr);

    return arr[i][j] + choice2;
}

int main(){
    vector<vector<int>> arr = {{1,1,1},
                     {1,0,1},
                     {0,1,1}};

    int m = arr.size();
    int n = arr[0].size();
    int ans = backtrack(0, 0, m, n, arr);
    cout<<ans;
}
